.. _document:

Documentation
=============

.. currentmodule:: wettingfront

To generate document, go to ``doc`` directory and build html files.

.. code-block:: bash

    $ cd doc
    $ make html

Documents will be generated in ``doc/build/html`` directory.
``index.html`` file will lead you to main page.

Docstring policy
----------------

Docstring follow Google style.

Docstrings are designed to show optimum result for both :func:`help` and
:mod:`autoapi`.

The biggest difference between the two features is that the former cannot
show docstrings for instances/attributes but the latter can. For example:

.. code-block:: python

    class Foo:
        """Docstring for Foo."""
        bar = 1
        """Docstring for bar."""

    foo = Foo()
    """Docstring for foo."""

Documentation generated by :mod:`autoapi` with this code can show every
docstring. However, ``help(foo)`` will just show the docstring of ``Foo``
and ``help(Foo.bar)`` will show docstring of :obj:`int`.

Therefore docstrings are meticulously written with the following rule:

#. Classes/modules must have documentation for its attributes.
    This way, ``help(Foo)`` will explain ``Foo.bar``.
    Similary, ``foo`` will be explained by its module docstring.
#. However, module does not need to document type annotation.
    For example, :obj:`wettingfront.ParamTypeVar` does not need to be
    documented in docstring of :mod:`wettingfront`.
    This is because interactive user does not need to access typing system.
#. Docstrings only for :mod:`autoapi` should be kept to minimum.
    We don't want to remove them because they provide useful links.
    For example, we keep docstring for ``Foo.bar`` but it is mainly documented
    in ``Foo``.
#. No redundancy.
    For example, if a class attribute has constant value and thus is
    automatically documented and user can check its value in runtime,
    no need to describe its value in docstring.
#. Documentation must look good.
    For example, :attr:`WettingFront.ParamType` is
    :class:`wettingfront.WettingParam` but it is not automatically shown in
    documentation. Therefore we write an attribute docstring indicating its
    value.
    Since interactive user can easily find out the attribute value,
    this information does not need to be written in class docstring.

Class constructors
------------------

Documentation policy for class constructors (:obj:`~object.__new__` and
:obj:`~object.__init__`) deserve its own justification.

If user sees their docstrings, it means that they intentionally ran
``help(Foo.__init__)``. Surely they have already ran ``help(Foo)`` to read
about what parameters does the class takes and what they mean.
Therefore the class constructor docstrings does not need to explain the
significance of their parameters; instead, describe what they do to them.

Class constructors are not included in :mod:`autoapi` documentation because
it makes the output too verbose.
